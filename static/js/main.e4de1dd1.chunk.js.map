{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","../node_modules/encoding/lib sync","../node_modules/@trust/jose/node_modules/@trust/webcrypto/src/algorithms sync","../node_modules/@trust/webcrypto/src/algorithms sync","components/functional_components/ProfilePicture/ProfilePicture.js","components/functional_components/NameSlot/NameSlot.js","components/functional_components/BioSlot/BioSlot.js","components/functional_components/EmailSlot/EmailSlot.js","components/functional_components/TelephoneSlot/TelephoneSlot.js","components/functional_components/JobSlot/JobSlot.js","components/stateful_components/Profile/Profile.js","components/functional_components/ContactSlot/ContactSlot.js","components/stateful_components/ContactsPage/ContactPage.js","components/stateful_components/Navigation/Navigation.js","components/functional_components/RequestCard/RequestCard.js","components/functional_components/DetailModal/DetailModal.js","components/stateful_components/OverviewPage/OverviewPage.js","components/functional_components/UploadPicture/UploadPicture.js","components/stateful_components/HealthPage/HealthPage.js","App.js","serviceWorker.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","ProfilePicture","props","react_default","a","createElement","htmlFor","src","picture","width","height","alt","name","type","style","display","onChange","accept","NameSlot","nameDisplay","editMode","FormControl_default","placeholder","onBlur","defaultValue","onClick","Row_default","border","borderRadius","Col_default","md","BioSlot","bioDisplay","bio","EmailSlot","email","split","emailDisplay","TelephoneSlot","telephone","telephoneDisplay","JobSlot","jobDisplay","job","FOAF","rdf","Namespace","VCARD","Profile","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchUser","auth","trackSession","session","webId","store","graph","Fetcher","load","then","any","sym","nameValue","value","undefined","emails","each","forEach","emailBlankId","emailAddress","push","pictureValue","jobValue","bioValue","telephones","telephoneBlankId","telephoneNumber","setState","newName","console","log","setProfilePicture","filePath","target","files","fetcher","currentPicture","state","reader","FileReader","onload","data","result","filename","encodeURIComponent","pictureURl","replace","webOperation","contentType","response","status","updater","UpdateManager","del","st","doc","ins","update","uri","ok","message","alert","readAsArrayBuffer","editName","newBio","editBio","newEmail","editEmail","newTelephone","editTelephone","newJob","editJob","_this2","lit","Promise","reject","_this3","_this4","oldEmail","oldEmailBlankId","_this5","_this6","oldTelephone","oldTelephoneBlankId","_this7","nameSlotMarkup","functional_components_NameSlot_NameSlot","applyNameChanges","bind","getNewName","toggleEditName","jobSlotMarkup","functional_components_JobSlot_JobSlot","applyJobChanges","getNewJob","toggleEditJob","bioSlotMarkup","functional_components_BioSlot_BioSlot","applyBioChanges","getNewBio","toggleEditBio","emailSlotsMarkup","index","functional_components_EmailSlot_EmailSlot","key","getNewEmail","toggleEditEmail","applyEmailChanges","telephoneSlotsMarkup","functional_components_TelephoneSlot_TelephoneSlot","getNewTelephone","toggleEditTelephone","applyTelephoneChanges","Container_default","functional_components_ProfilePicture_ProfilePicture","index_es","logout","React","Component","ContactSlot","friend","Image_default","fluid","variant","ACL","ContactsPage","friendToAdd","canAddFriend","friends","permissionStore","permissionFetcher","viewerNode","friendName","friendPicture","friendAccess","statementsMatching","length","access","all","results","xhr","XMLHttpRequest","url","onreadystatechange","readyState","DONE","RegExp","test","open","send","fetchFriends","addFriendMarkup","description","onInput","changeFriendToAdd","addFriend","disabled","friendsMarkup","functional_components_ContactSlot_ContactSlot","Navigation","padding","Navbar_default","bg","fixed","Brand","marginLeft","Nav_default","className","react_router_dom","to","color","login","RequestCard","request","author","sender","avatar","permissions","requestedRessource","notification","requestStatus","permission","j","es_Col","onToggle","es_Row","lg","onRevoke","onAccept","onDeny","DetailModal","requestType","requestIntent","requestRisks","riskEvaluation","identityEvaluation","createdValue","expiresValue","riskEvaluationMarkup","identityEvaluationMarkup","expirationAssessment","Modal_default","assign","size","aria-labelledby","centered","Header","closeButton","Title","Body","es_Container","backgroundColor","marginRight","risk","i","marginTop","Footer","Button_default","onHide","LDP","PREQ","OverviewPage","addRequest","assertThisInitialized","removeRequest","fetchNotificationAddresses","fetchNotification","requests","currentRequest","showModal","inboxStore","inboxFetcher","inboxAddress","notificationAddress","notificationAddressValue","risks","notificationStore","requestTypeValue","requestedRessourceValue","created","expires","requestStatusValue","privacyRisk","privacyRiskValue","financialRisk","financialRiskValue","legalRisk","legalRiskValue","evaluateRisks","requestIntentValue","includes","file","getAttribute","aclFile","ownerNode","accessStore","accessFetcher","accessUpdater","insACL","catch","err","newACLTriples","put","delNotif","insNotif","window","location","delStatus","insStatus","newRequest","slice","input","parseInt","splice","filteredRequests","filter","arr","item","functional_components_RequestCard_RequestCard","toggleModal","acceptRequest","denyRequest","revokeRequest","getRequests","addrequest","removerequest","functional_components_DetailModal_DetailModal","show","UploadPicture","opacity","HealthPage","fetchPictures","healthDataAddress","pictureMarkup","margin","functional_components_UploadPicture_UploadPicture","uploadPic","App","currentSession","webID","stateful_components_Navigation_Navigation","react_router","path","render","stateful_components_OverviewPage_OverviewPage","stateful_components_Profile_Profile","exact","stateful_components_HealthPage_HealthPage","ContactPage","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4de1dd1.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 112,\n\t\"./N3Lexer.js\": 112,\n\t\"./N3Parser\": 113,\n\t\"./N3Parser.js\": 113,\n\t\"./N3Store\": 161,\n\t\"./N3Store.js\": 161,\n\t\"./N3StreamParser\": 162,\n\t\"./N3StreamParser.js\": 162,\n\t\"./N3StreamWriter\": 168,\n\t\"./N3StreamWriter.js\": 168,\n\t\"./N3Util\": 114,\n\t\"./N3Util.js\": 114,\n\t\"./N3Writer\": 117,\n\t\"./N3Writer.js\": 117\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 284;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 347;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 471;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 498;","import React from \"react\";\n\nconst ProfilePicture = (props) => {\n    return (\n        <label htmlFor=\"profilePictureUpload\">\n            <img src={props.picture} width=\"100%\" height=\"100%\" alt=\"This is the ProfilePicture\"></img>\n        <input\n          id=\"profilePictureUpload\"\n          name=\"profilePictureUpload\"\n          type=\"file\"\n          style={{display: \"none\"}}\n          onChange={props.onChange}\n          accept=\"image/*\"\n        />\n      </label>\n    )\n}\n\nexport default ProfilePicture;","import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst NameSlot = (props) => {\n  let nameDisplay = props.editMode ? (\n    <FormControl\n      placeholder={props.name}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      defaultValue={props.name}\n    />\n  ) : (\n    <p onClick={props.onClick}>\n      {props.name}\n    </p>\n  );\n\n  return (\n    <Row\n      style={{ border: \"solid #FFF 5px\", borderRadius: \"10\", width: \"100%\" }}\n    >\n      <Col md=\"8\">\n        <Row style={{ width: \"100%\" }}>{nameDisplay}</Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default NameSlot;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nconst BioSlot = (props) => {\n  let bioDisplay = props.editMode ? (\n    <FormControl\n      placeholder={props.bio}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      defaultValue={props.bio}\n    />\n  ) : (\n    <p onClick={props.onClick}>{props.bio}</p>\n  );\n\n  return (\n    <Row\n      style={{ border: \"solid #FFF 5px\", borderRadius: \"10\", width: \"100%\" }}\n    >\n      <Col md=\"8\">\n        <Row style={{ width: \"100%\" }}>{bioDisplay}</Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BioSlot;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nconst EmailSlot = (props) => {\n  const email = props.email[0].split(\":\")[1]\n\n  let emailDisplay = props.editMode ? (\n    <FormControl\n      placeholder={email}\n      id={props.email[1]}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      defaultValue={email}\n    />\n  ) : (\n    <p onClick={props.onClick}>{email}</p>\n  );\n\n  return (\n    <Row\n      style={{ border: \"solid #FFF 5px\", borderRadius: \"10\", width: \"100%\" }}\n    >\n      <Col md=\"8\">\n        <Row style={{ width: \"100%\" }}>{emailDisplay}</Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default EmailSlot;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nconst TelephoneSlot = (props) => {\n    const telephone = props.telephone[0].split(\":\")[1]\n    let telephoneDisplay = props.editMode ? (\n        <FormControl\n        placeholder={telephone}\n        id={props.telephone[1]}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n        defaultValue={telephone}\n        />\n    ) : (\n        <p onClick={props.onClick}>{telephone}</p>\n    );\n\n    return (\n        <Row style={{border: \"solid #FFF 5px\", borderRadius: \"10\", width: \"100%\"}}>\n            <Col md=\"8\">\n                <Row style={{width: \"100%\"}}>\n                    {telephoneDisplay}\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default TelephoneSlot;","import React from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst JobSlot = (props) => {\n  let jobDisplay = props.editMode ? (\n    <FormControl\n      placeholder={props.job}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      defaultValue={props.job}\n    />\n  ) : (\n    <p onClick={props.onClick}>\n      {props.job}\n    </p>\n  );\n\n  return (\n    <Row\n      style={{ border: \"solid #FFF 5px\", borderRadius: \"10\", width: \"100%\" }}\n    >\n      <Col md=\"8\">\n        <Row style={{ width: \"100%\" }}>{jobDisplay}</Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default JobSlot;\n","import React from \"react\";\nimport rdf from \"rdflib\";\nimport auth from \"solid-auth-client\";\nimport { Button } from \"yoda-design-system\";\nimport Container from \"react-bootstrap/Container\";\nimport ProfilePicture from \"../../functional_components/ProfilePicture\";\nimport NameSlot from \"../../functional_components/NameSlot\";\nimport BioSlot from \"../../functional_components/BioSlot\";\nimport EmailSlot from \"../../functional_components/EmailSlot\";\nimport TelephoneSlot from \"../../functional_components/TelephoneSlot\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport JobSlot from \"../../functional_components/JobSlot\";\n\nconst FOAF = new rdf.Namespace(\"http://xmlns.com/foaf/0.1/\");\nconst VCARD = new rdf.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined,\n      name: \"\",\n      picture: \"\",\n      emails: [],\n      job: \"\",\n      bio: \"\",\n      telephones: [],\n      newName: \"\",\n      editName: false,\n      newBio: \"\",\n      editBio: false,\n      newEmail: \"\",\n      editEmail: false,\n      newTelephone: \"\",\n      editTelephone: false,\n      newJob: \"\",\n      editJob: false\n    };\n  }\n\n  fetchUser = () => {\n    auth.trackSession(session => {\n      if (!session) {\n        console.log(\"You are not logged in\");\n      } else {\n        const webId = session.webId;\n\n        const store = rdf.graph();\n        const fetcher = new rdf.Fetcher(store);\n\n        fetcher.load(webId).then(() => {\n          const name = store.any(rdf.sym(webId), FOAF(\"name\"));\n          const nameValue = name ? name.value : undefined;\n\n          var emails = [];\n          store\n            .each(rdf.sym(webId), VCARD(\"hasEmail\"))\n            .forEach(emailBlankId => {\n              store\n                .each(rdf.sym(emailBlankId), VCARD(\"value\"))\n                .forEach(emailAddress => {\n                  emails.push([emailAddress.value, emailBlankId.value]);\n                });\n            });\n\n          const picture = store.any(rdf.sym(webId), VCARD(\"hasPhoto\"));\n          const pictureValue = picture ? picture.value : \"\";\n\n          const job = store.any(rdf.sym(webId), VCARD(\"role\"));\n          const jobValue = job ? job.value : \"\";\n\n          const bio = store.any(rdf.sym(webId), VCARD(\"note\"));\n          const bioValue = bio ? bio.value : undefined;\n\n          var telephones = [];\n          store\n            .each(rdf.sym(webId), VCARD(\"hasTelephone\"))\n            .forEach(telephoneBlankId => {\n              store\n                .each(rdf.sym(telephoneBlankId), VCARD(\"value\"))\n                .forEach(telephoneNumber => {\n                  telephones.push([\n                    telephoneNumber.value,\n                    telephoneBlankId.value\n                  ]);\n                });\n            });\n\n          this.setState({\n            webId: webId,\n            name: nameValue,\n            picture: pictureValue,\n            emails: emails,\n            job: jobValue,\n            bio: bioValue,\n            telephones: telephones,\n            newName: nameValue,\n            editMode: false\n          });\n        });\n      }\n    });\n  };\n\n  setProfilePicture = e => {\n    var filePath = e.target.files[0];\n    var store = rdf.graph();\n    var fetcher = new rdf.Fetcher(store);\n\n    let webId = this.props.webId;\n    let currentPicture = this.state.picture;\n\n    var reader = new FileReader();\n    reader.onload = function() {\n      var data = this.result;\n      var filename = encodeURIComponent(filePath.name);\n      var contentType = \"image\";\n      let pictureURl = webId.replace(\"card#me\", filename);\n      fetcher\n        .webOperation(\"PUT\", pictureURl, {\n          data: data,\n          contentType: contentType\n        })\n        .then(response => {\n          if (response.status === 201) {\n            const updater = new rdf.UpdateManager(store);\n            let del = currentPicture\n              ? rdf.st(\n                  rdf.sym(webId),\n                  VCARD(\"hasPhoto\"),\n                  rdf.sym(currentPicture),\n                  rdf.sym(webId).doc()\n                )\n              : [];\n            let ins = rdf.st(\n              rdf.sym(webId),\n              VCARD(\"hasPhoto\"),\n              rdf.sym(pictureURl),\n              rdf.sym(webId).doc()\n            );\n            updater.update(del, ins, (uri, ok, message) => {\n              if (ok)\n                console.log(\n                  \"Changes have been applied, reload page to see them\"\n                );\n              else alert(message);\n            });\n          }\n        });\n    };\n    reader.readAsArrayBuffer(filePath);\n  };\n\n  applyNameChanges() {\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    var del;\n    var ins;\n\n    del = rdf.st(\n      rdf.sym(this.props.webId),\n      FOAF(\"name\"),\n      rdf.lit(this.state.name),\n      rdf.sym(this.props.webId).doc()\n    );\n    ins = rdf.st(\n      rdf.sym(this.props.webId),\n      FOAF(\"name\"),\n      rdf.lit(this.state.newName),\n      rdf.sym(this.props.webId).doc()\n    );\n\n    var updatePromise = new Promise((resolve, reject) => {\n      updater.update(del, ins, (uri, ok, message) => {\n        if (ok) {\n          console.log(\"Changes have been applied!\");\n          resolve();\n        } else reject(message);\n      });\n      this.setState({ editName: false });\n    });\n    updatePromise.then(() => {\n      this.fetchUser();\n    });\n  }\n\n  getNewName(e) {\n    this.setState({ newName: e.target.value });\n  }\n\n  toggleEditName() {\n    this.setState({ editName: !this.state.editName });\n  }\n\n  applyBioChanges() {\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    var del;\n    var ins;\n\n    del = rdf.st(\n      rdf.sym(this.props.webId),\n      VCARD(\"note\"),\n      rdf.lit(this.state.bio),\n      rdf.sym(this.props.webId).doc()\n    );\n    ins = rdf.st(\n      rdf.sym(this.props.webId),\n      VCARD(\"note\"),\n      rdf.lit(this.state.newBio),\n      rdf.sym(this.props.webId).doc()\n    );\n\n    var updatePromise = new Promise((resolve, reject) => {\n      updater.update(del, ins, (uri, ok, message) => {\n        if (ok) {\n          console.log(\"Changes have been applied!\");\n          resolve();\n        } else reject(message);\n      });\n      this.setState({ editBio: false });\n    });\n    updatePromise.then(() => {\n      this.fetchUser();\n    });\n  }\n\n  getNewBio(e) {\n    this.setState({ newBio: e.target.value });\n  }\n\n  toggleEditBio() {\n    this.setState({ editBio: !this.state.editBio });\n  }\n\n  applyEmailChanges(e) {\n    const oldEmail = e.target.placeholder;\n    const oldEmailBlankId = e.target.id;\n\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    var del;\n    var ins;\n\n    del = rdf.st(\n      rdf.sym(oldEmailBlankId),\n      VCARD(\"value\"),\n      rdf.sym(\"mailto:\" + oldEmail),\n      rdf.sym(this.state.webId).doc()\n    );\n    ins = rdf.st(\n      rdf.sym(oldEmailBlankId),\n      VCARD(\"value\"),\n      rdf.sym(\"mailto:\" + this.state.newEmail),\n      rdf.sym(this.state.webId).doc()\n    );\n\n    var updatePromise = new Promise((resolve, reject) => {\n      updater.update(del, ins, (uri, ok, message) => {\n        if (ok) {\n          resolve();\n        } else reject(message);\n      });\n    });\n    updatePromise.then(() => {\n      this.setState({ editEmail: false });\n      this.fetchUser();\n    });\n  }\n\n  getNewEmail(e) {\n    this.setState({ newEmail: e.target.value });\n  }\n\n  toggleEditEmail() {\n    this.setState({ editEmail: !this.state.editEmail });\n  }\n\n  applyJobChanges() {\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    var del;\n    var ins;\n\n    del = rdf.st(\n      rdf.sym(this.props.webId),\n      VCARD(\"role\"),\n      rdf.lit(this.state.job),\n      rdf.sym(this.props.webId).doc()\n    );\n    ins = rdf.st(\n      rdf.sym(this.props.webId),\n      VCARD(\"role\"),\n      rdf.lit(this.state.newJob),\n      rdf.sym(this.props.webId).doc()\n    );\n\n    var updatePromise = new Promise((resolve, reject) => {\n      updater.update(del, ins, (uri, ok, message) => {\n        if (ok) {\n          resolve();\n        } else reject(message);\n      });\n    });\n    updatePromise.then(() => {\n      this.setState({ editJob: false });\n      this.fetchUser();\n    });\n  }\n\n  getNewJob(e) {\n    this.setState({ newJob: e.target.value });\n  }\n\n  toggleEditJob() {\n    this.setState({ editJob: !this.state.editJob });\n  }\n\n  applyTelephoneChanges(e) {\n    const oldTelephone = e.target.placeholder;\n    const oldTelephoneBlankId = e.target.id;\n\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    var del;\n    var ins;\n\n    del = rdf.st(\n      rdf.sym(oldTelephoneBlankId),\n      VCARD(\"value\"),\n      rdf.sym(\"tel:\" + oldTelephone),\n      rdf.sym(this.state.webId).doc()\n    );\n    ins = rdf.st(\n      rdf.sym(oldTelephoneBlankId),\n      VCARD(\"value\"),\n      rdf.sym(\"tel:\" + this.state.newTelephone),\n      rdf.sym(this.state.webId).doc()\n    );\n\n    var updatePromise = new Promise((resolve, reject) => {\n      updater.update(del, ins, (uri, ok, message) => {\n        if (ok) {\n          resolve();\n        } else reject(message);\n      });\n    });\n    updatePromise.then(() => {\n      this.setState({ editTelephone: false });\n      this.fetchUser();\n    });\n  }\n\n  getNewTelephone(e) {\n    this.setState({ newTelephone: e.target.value });\n  }\n\n  toggleEditTelephone() {\n    this.setState({ editTelephone: !this.state.editTelephone });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    let nameSlotMarkup = this.state.name ? (\n      <NameSlot\n        name={this.state.name}\n        editMode={this.state.editName}\n        onBlur={this.applyNameChanges.bind(this)}\n        onChange={this.getNewName.bind(this)}\n        onClick={this.toggleEditName.bind(this)}\n      />\n    ) : (\n      <NameSlot\n        name=\"You did not enter your name yet...\"\n        editMode={this.state.editName}\n        onBlur={this.applyNameChanges.bind(this)}\n        onChange={this.getNewName.bind(this)}\n        onClick={this.toggleEditName.bind(this)}\n      />\n    );\n\n    let jobSlotMarkup = this.state.job ? (\n      <JobSlot\n        job={this.state.job}\n        editMode={this.state.editJob}\n        onBlur={this.applyJobChanges.bind(this)}\n        onChange={this.getNewJob.bind(this)}\n        onClick={this.toggleEditJob.bind(this)}\n      />\n    ) : (\n      <JobSlot\n        job=\"You did not enter your job yet...\"\n        editMode={this.state.editJob}\n        onBlur={this.applyJobChanges.bind(this)}\n        onChange={this.getNewJob.bind(this)}\n        onClick={this.toggleEditJob.bind(this)}\n      />\n    );\n\n    let bioSlotMarkup = this.state.bio ? (\n      <BioSlot\n        bio={this.state.bio}\n        editMode={this.state.editBio}\n        onBlur={this.applyBioChanges.bind(this)}\n        onChange={this.getNewBio.bind(this)}\n        onClick={this.toggleEditBio.bind(this)}\n      />\n    ) : (\n      <BioSlot\n        bio=\"You do not have a bio yet...\"\n        editMode={this.state.editBio}\n        onBlur={this.applyBioChanges.bind(this)}\n        onChange={this.getNewBio.bind(this)}\n        onClick={this.toggleEditBio.bind(this)}\n      />\n    );\n\n    let emailSlotsMarkup = this.state.emails.map((email, index) => {\n      return (\n        <EmailSlot\n          key={index}\n          email={email}\n          editMode={this.state.editEmail}\n          onChange={this.getNewEmail.bind(this)}\n          onClick={this.toggleEditEmail.bind(this)}\n          onBlur={this.applyEmailChanges.bind(this)}\n        />\n      );\n    });\n\n    let telephoneSlotsMarkup = this.state.telephones.map((telephone, index) => {\n      return (\n        <TelephoneSlot\n          key={index}\n          telephone={telephone}\n          editMode={this.state.editTelephone}\n          onChange={this.getNewTelephone.bind(this)}\n          onClick={this.toggleEditTelephone.bind(this)}\n          onBlur={this.applyTelephoneChanges.bind(this)}\n        />\n      );\n    });\n\n    return (\n      <Container>\n        {this.state.webId ? (\n          <div>\n            <Row>\n              <Col>\n                <ProfilePicture\n                  picture={this.state.picture}\n                  onChange={this.setProfilePicture}\n                />\n              </Col>\n              <Col>\n                {nameSlotMarkup}\n                {jobSlotMarkup}\n                {bioSlotMarkup}\n                {emailSlotsMarkup}\n                {telephoneSlotsMarkup}\n              </Col>\n            </Row>\n            <Row>\n              <Button onClick={this.props.logout}>Logout</Button>\n            </Row>\n          </div>\n        ) : (\n          <p>You are not logged in...</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport { Typography, ListItem } from \"yoda-design-system\";\nconst ContactSlot = props => {\n  const friend = props.friend;\n  return (\n    <ListItem>\n        <Image fluid width=\"4%\" src={friend.picture} />\n        <Typography variant=\"paragraph\">{friend.name}</Typography>\n    </ListItem>\n  );\n};\n\nexport default ContactSlot;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Button, List, TextField } from \"yoda-design-system\";\nimport auth from \"solid-auth-client\";\nimport rdf from \"rdflib\";\nimport ContactSlot from \"../../functional_components/ContactSlot/ContactSlot\";\n\nconst FOAF = new rdf.Namespace(\"http://xmlns.com/foaf/0.1/\");\nconst VCARD = new rdf.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\nconst ACL = new rdf.Namespace(\"http://www.w3.org/ns/auth/acl#\");\n\nclass ContactsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined,\n      friendToAdd: \"\",\n      canAddFriend: false,\n      friends: []\n    };\n  }\n\n  fetchFriends() {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const webId = this.state.webId;\n\n    const permissionStore = rdf.graph();\n    const permissionFetcher = new rdf.Fetcher(permissionStore);\n\n    let viewerNode = webId.replace(\"card#me\", \"card.acl#viewer\");\n    permissionFetcher.load(viewerNode);\n\n    fetcher.load(webId).then(response => {\n      const friendsWebId = store.each(rdf.sym(webId), FOAF(\"knows\"));\n\n      const friends = friendsWebId.map(friend => {\n        return fetcher.load(friend.value).then(() => {\n          console.log(\"Fetched \" + friend.value + \"'s Profile\");\n          const friendName = store.any(rdf.sym(friend.value), FOAF(\"name\"));\n\n          var friendPicture = store.any(\n            rdf.sym(friend.value),\n            VCARD(\"hasPhoto\")\n          );\n          friendPicture = friendPicture ? friendPicture.value : \"\";\n\n          const friendAccess =\n            permissionStore.statementsMatching(\n              viewerNode,\n              ACL(\"agent\"),\n              rdf.sym(friend.value)\n            ).length > 0\n              ? true\n              : false;\n          //console.log(friend.value, friendAccess)\n          return {\n            name: friendName.value,\n            webId: friend.value,\n            access: friendAccess,\n            picture: friendPicture\n          };\n        });\n      });\n      Promise.all(friends).then(results => {\n        this.setState({ friends: results });\n      });\n    });\n  }\n\n  changeFriendToAdd(e) {\n    var xhr = new XMLHttpRequest();\n    const url = e.target.value;\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          this.setState({\n            friendToAdd: url,\n            canAddFriend: true\n          });\n        } else {\n          this.setState({\n            canAddFriend: false\n          });\n        }\n      }\n    };\n    const urlRegExp = new RegExp(/(\\w+(:\\/\\/){1})(\\w+\\.)(\\w+\\.)(\\w+\\/)+/g);\n    if (urlRegExp.test(e.target.value)) {\n      xhr.open(\"GET\", url);\n      xhr.send();\n    }\n  }\n\n  addFriend() {\n    let webId = this.state.webId;\n    let friendToAdd = this.state.friendToAdd;\n    console.log(friendToAdd);\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    let del = [];\n    let ins = rdf.st(\n      rdf.sym(webId),\n      FOAF(\"knows\"),\n      rdf.sym(friendToAdd),\n      rdf.sym(webId).doc()\n    );\n    updater.update(del, ins, (ok, uri, message) => {\n      if (ok) console.log(\"Changes have been applied, reload page to see them\");\n      else alert(message);\n    });\n  }\n\n  componentDidMount() {\n    auth.trackSession(session => {\n      if (session) {\n        this.setState({\n          webId: session.webId\n        });\n        this.fetchFriends();\n      }\n    });\n  }\n\n  render() {\n    let addFriendMarkup = this.state.canAddFriend ? (\n      <div>\n        <TextField\n          description=\"Enter a friends webId\"\n          onInput={this.changeFriendToAdd.bind(this)}\n        />\n        <Button onClick={this.addFriend.bind(this)}>Add Friend</Button>\n      </div>\n    ) : (\n      <div>\n        <TextField\n          type=\"text\"\n          description=\"Enter a friends webId\"\n          onInput={this.changeFriendToAdd.bind(this)}\n        />\n        <Button disabled>Add Friend</Button>\n      </div>\n    );\n\n    const friends = this.state.friends;\n    const friendsMarkup = friends.map((friend, index) => {\n      return <ContactSlot friend={friend} key={index} />;\n    });\n\n    return (\n      <Container>\n        <List>{friendsMarkup}</List>\n        {this.state.webId ? addFriendMarkup : <p>You are not logged in...</p>}\n      </Container>\n    );\n  }\n}\n\nexport default ContactsPage;\n","import React from \"react\";\nimport rdf from \"rdflib\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"yoda-design-system\";\n\nconst FOAF = new rdf.Namespace(\"http://xmlns.com/foaf/0.1/\");\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: props.webId,\n      friendToAdd: \"\",\n      canAddFriend: false\n    };\n  }\n\n  changeFriendToAdd(e) {\n    var xhr = new XMLHttpRequest();\n    const url = e.target.value;\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          this.setState({\n            friendToAdd: url,\n            canAddFriend: true\n          });\n        } else {\n          this.setState({\n            canAddFriend: false\n          });\n        }\n      }\n    };\n    const urlRegExp = new RegExp(/(\\w+(:\\/\\/){1})(\\w+\\.)(\\w+\\.)(\\w+\\/)+/g);\n    if (urlRegExp.test(e.target.value)) {\n      xhr.open(\"GET\", url);\n      xhr.send();\n    }\n  }\n\n  addFriend() {\n    let webId = this.props.webId;\n    let friendToAdd = this.state.friendToAdd;\n    console.log(friendToAdd);\n    const store = rdf.graph();\n    const updater = new rdf.UpdateManager(store);\n\n    let del = [];\n    let ins = rdf.st(\n      rdf.sym(webId),\n      FOAF(\"knows\"),\n      rdf.sym(friendToAdd),\n      rdf.sym(webId).doc()\n    );\n    updater.update(del, ins, (ok, uri, message) => {\n      if (ok) console.log(\"Changes have been applied, reload page to see them\");\n      else alert(message);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ padding: \"3%\" }}>\n        <Navbar bg=\"light\" variant=\"light\" fixed=\"top\">\n          <Navbar.Brand>\n            <img src=\"favicon.ico\" width=\"30\" height=\"30\" alt=\"Solid logo\" />\n            <span style={{ marginLeft: \"5%\" }}>Solid Web</span>\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <NavLink\n              to=\"/\"\n              style={{ color: \"#000\", marginLeft: \"10%\" }}\n            >\n              Overview\n            </NavLink>\n            <NavLink to=\"/profile\" style={{ color: \"#000\", marginLeft: \"10%\" }}>\n              Profile\n              </NavLink>\n            <NavLink\n              to=\"/contacts\"\n              style={{ color: \"#000\", marginLeft: \"10%\" }}\n            >\n              Contacts\n            </NavLink>\n            <NavLink\n              to=\"/health\"\n              style={{ color: \"#000\", marginLeft: \"10%\" }}\n            >\n              Health Data\n            </NavLink>\n          </Nav>\n          {this.props.webId ? (\n            \"\"\n          ) : (\n            <Button onClick={this.props.login}>Login</Button>\n          )}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./RequestCard.css\";\nimport { Button, Typography } from \"yoda-design-system\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst RequestCard = props => {\n  const request = props.request;\n  const author = request[0];\n  const sender = request[1];\n  const avatar = request[2];\n  const permissions = request[3];\n  const requestedRessource = request[4];\n  const notification = request[5];\n  const requestStatus = request[11];\n\n  return (\n    <div className=\"requestcard\">\n      <div className=\"requestcard-header\">\n        <img className=\"requestcard-header-avatar\" src={avatar} alt=\"avatar\" />\n        <strong>{author}</strong> wants to: {requestStatus == \"Accepted\" ? <Typography style={{ color: \"green\", marginLeft: \"20%\" }}>Accepted</Typography> : \"\"}\n      </div>\n      {permissions.map((permission, j) => {\n        return (\n          <div className=\"requestcard-request\" key={j}>\n            <Col>{permission}</Col>\n            <Col>\n              <p\n                style={{ color: \"#00F\" }}\n                onClick={props.onToggle}\n                index={props.index}\n              >\n                More Information\n              </p>\n            </Col>\n            {requestStatus == \"Accepted\" ? (\n              <Row>\n                <Col lg=\"6\">\n                  <Button\n                    onClick={props.onRevoke}\n                    variant=\"outlined\"\n                    sender={sender}\n                    notification={notification}\n                    id={requestedRessource}\n                  >\n                    Revoke\n                  </Button>\n                </Col>\n              </Row>\n            ) : (\n              <div>\n                <Button\n                  className=\"requestƒcard-request-button\"\n                  variant=\"outlined\"\n                  sender={sender}\n                  notification={notification}\n                  id={requestedRessource}\n                  onClick={props.onAccept}\n                >\n                  Accept\n                </Button>\n                <Button\n                  className=\"requestcard-request-button\"\n                  variant=\"outlined\"\n                  sender={sender}\n                  notification={notification}\n                  id={requestedRessource}\n                  onClick={props.onDeny}\n                >\n                  Deny\n                </Button>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RequestCard;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nconst DetailModal = props => {\n  const request = props.request;\n  const author = request[0];\n  const sender = request[1];\n  const avatar = request[2];\n  const permissions = request[3][0];\n  const requestedRessource = request[4];\n  const notification = request[5];\n  const requestType = request[6];\n  const requestIntent = request[7];\n  const requestRisks = request[8];\n  const riskEvaluation = request[9];\n  const identityEvaluation = request[10];\n  const createdValue = request[12]\n  const expiresValue = request[13]\n\n  const riskEvaluationMarkup = riskEvaluation ? <p style={{ color: \"green\"}}>Has provided a risk assesment</p> : <p style={{ color: \"red\"}}>Has not provided a risk assesment</p>\n  const identityEvaluationMarkup = identityEvaluation ? <p style={{ color: \"green\"}}>Has provided a linked data profile</p> : <p style={{ color: \"red\"}}>Has not provided an identity</p>\n  const expirationAssessment = createdValue !== \"\" && expiresValue !== \"\" ? <p style={{ color: \"green\"}}>Has provided a expiring date to permisions</p> : <p style={{ color: \"red\"}}>Permission has no expiration</p>\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {author + \" wants to \" + permissions}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container>\n          <Row>\n            <Col lg=\"1\" />\n            <Col\n              lg=\"5\"\n              style={{\n                padding: \"5%\",\n                backgroundColor: \"rgb(248, 248, 248)\",\n                borderRadius: \"8px\",\n                marginRight: \"10px\"\n              }}\n            >\n              <Row>\n                <h4 style={{ color: \"#3256D7\" }}>General Information</h4>\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Request from:</Col>\n                <Col lg=\"5\">{sender}</Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Date of Request:</Col>\n                <Col lg=\"5\">{createdValue}</Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Expiration Date:</Col>\n                <Col lg=\"5\">{expiresValue}</Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Type of Information:</Col>\n                <Col lg=\"5\">{requestType}</Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Source:</Col>\n                <Col lg=\"5\">{sender}</Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg=\"5\">Intent:</Col>\n                <Col lg=\"5\">{requestIntent}</Col>\n                <Col lg=\"1\" />\n              </Row>\n            </Col>\n            <Col\n              lg=\"5\"\n              style={{\n                padding: \"5%\",\n                backgroundColor: \"rgb(248, 248, 248)\",\n                borderRadius: \"8px\",\n                marginLeft: \"10px\"\n              }}\n            >\n              <Row>\n                <h4 style={{ color: \"#3256D7\" }}>Possible Risks: </h4>\n              </Row>\n              <Row>\n                <p style={{ color: \"#333131\" }}>\n                  By giving consent to this permission request I am aware that\n                  there might be:{\" \"}\n                </p>\n              </Row>\n              {requestRisks.map((risk, i) => {\n                return risk !== \"\" ?\n                (\n                  <Row>\n                    <Col lg=\"1\" />\n                    <Col lg>\n                      <li>{risk}</li>\n                    </Col>\n                    <Col lg=\"1\" />\n                  </Row>\n                ) : \"\";\n              })}\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"1\" />\n            <Col\n              lg\n              style={{\n                padding: \"5%\",\n                backgroundColor: \"rgb(248, 248, 248)\",\n                borderRadius: \"8px\",\n                marginTop: \"10px\"\n              }}\n            >\n              <Row>\n                <h4 style={{ color: \"#3256D7\" }}>Evaluation: </h4>\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg>\n                  {riskEvaluationMarkup}\n                </Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg>\n                  {identityEvaluationMarkup}\n                </Col>\n                <Col lg=\"1\" />\n              </Row>\n              <Row>\n                <Col lg=\"1\" />\n                <Col lg>\n                  {expirationAssessment}\n                </Col>\n                <Col lg=\"1\" />\n              </Row>\n            </Col>\n            <Col lg=\"1\" />\n          </Row>\n          <Row>\n            {/* <Col lg={{ span: \"3\", offset: \"3\" }}>\n              <Button\n                style={{ backgroundColor: \"red\" }}\n                sender={sender}\n                notification={notification}\n                id={requestedRessource}\n                onClick={props.whenDeny}\n              >\n                Deny request\n              </Button>\n            </Col>\n            <Col lg={{ span: \"3\", offset: \"3\" }}>\n              <Button\n                style={{ backgroundColor: \"green\" }}\n                sender={sender}\n                notification={notification}\n                id={requestedRessource}\n                onClick={props.whenAccept}\n              >\n                Accept request\n              </Button>\n            </Col> */}\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DetailModal;\n","import React from \"react\";\nimport rdf from \"rdflib\";\nimport auth from \"solid-auth-client\";\nimport \"./OverviewPage.css\";\nimport RequestCard from \"../../functional_components/RequestCard\";\nimport DetailModal from \"../../functional_components/DetailModal\";\n\nconst LDP = rdf.Namespace(\"http://www.w3.org/ns/ldp#\");\nconst ACL = rdf.Namespace(\"http://www.w3.org/ns/auth/acl#\");\nconst PREQ = rdf.Namespace(\n  \"https://a-solid-web.github.io/permission-ontology/permissionrequests.rdf#\"\n);\n\nclass OverviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addRequest = this.addRequest.bind(this);\n    this.removeRequest = this.removeRequest.bind(this);\n    this.fetchNotificationAddresses = this.fetchNotificationAddresses.bind(\n      this\n    );\n    this.fetchNotification = this.fetchNotification.bind(this);\n\n    this.state = {\n      webId: this.props.webId,\n      requests: [],\n      currentRequest: 0,\n      showModal: false\n    };\n  }\n\n  fetchNotificationAddresses(webId) {\n    let inboxStore = rdf.graph();\n    let inboxFetcher = new rdf.Fetcher(inboxStore);\n\n    let inboxAddress = webId.replace(\"profile/card#me\", \"inbox\");\n\n    inboxFetcher.load(inboxAddress).then(response => {\n      const notificationAddresses = inboxStore.each(\n        rdf.sym(inboxAddress),\n        LDP(\"contains\")\n      );\n\n      notificationAddresses.forEach(notificationAddress => {\n        const notificationAddressValue =\n          inboxAddress + \"/\" + notificationAddress.value.split(\"/\")[3];\n        this.fetchNotification(notificationAddressValue);\n      });\n    });\n  }\n\n  evaluateRisks(risks) {\n    var result = true;\n    risks.forEach(risk => {\n      if (risk === \"\") {\n        result = false;\n      }\n    });\n    return result;\n  }\n\n  fetchNotification(notificationAddress) {\n    let notificationStore = rdf.graph();\n    let notificationFetcher = new rdf.Fetcher(notificationStore);\n\n    notificationFetcher.load(notificationAddress).then(response => {\n      const sender = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"requestFrom\")\n      );\n\n      if (!sender) {\n        return;\n      }\n\n      const requestType = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"requestDataType\")\n      );\n      const requestTypeValue = requestType.value.split(\"#\")[1];\n\n      const requestedRessource = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"requests\")\n      );\n      const requestedRessourceValue = requestedRessource.value;\n\n      const created = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"wasSentOn\")\n      );\n      const createdValue = created ? created.value : \"\";\n\n      const expires = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"expires\")\n      );\n      const expiresValue = expires ? expires.value : \"\";\n\n      const requestStatus = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"hasStatus\")\n      );\n      const requestStatusValue = requestStatus ? requestStatus.value : \"\";\n\n      const privacyRisk = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"privacyRisklevel\")\n      );\n      const privacyRiskValue = privacyRisk ? privacyRisk.value : \"\";\n\n      const financialRisk = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"financialRisklevel\")\n      );\n      const financialRiskValue = financialRisk ? financialRisk.value : \"\";\n\n      const legalRisk = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"legalRisklevel\")\n      );\n      const legalRiskValue = legalRisk ? legalRisk.value : \"\";\n\n      const risks = [privacyRiskValue, financialRiskValue, legalRiskValue];\n      const riskEvaluation = this.evaluateRisks(risks);\n\n      const requestIntent = notificationStore.any(\n        rdf.sym(notificationAddress),\n        PREQ(\"hasIntent\")\n      );\n      const requestIntentValue = requestIntent\n        ? requestIntent.value.split(\"#\")[1]\n        : \"\";\n\n      if (!requestIntentValue) {\n        return;\n      }\n\n      const identityEvaluation = sender.value.includes(\"profile/card#me\");\n\n      this.addRequest([\n        sender.value,\n        sender.value,\n        \"\",\n        [\"Access \" + requestTypeValue + \" (\" + requestedRessourceValue + \")\"],\n        requestedRessourceValue,\n        notificationAddress,\n        requestTypeValue,\n        requestIntentValue,\n        [privacyRiskValue, financialRiskValue, legalRiskValue],\n        riskEvaluation,\n        identityEvaluation,\n        requestStatusValue,\n        createdValue,\n        expiresValue\n      ]);\n    });\n  }\n\n  acceptRequest(e) {\n    const file = e.target.id;\n    console.log(file);\n    const sender = e.target.getAttribute(\"sender\");\n    const notification = e.target.getAttribute(\"notification\");\n    const aclFile = file + \".acl\";\n    const ownerNode = aclFile + \"#owner\";\n    const viewerNode = aclFile + \"#viewer\";\n    console.log(ownerNode);\n\n    const accessStore = rdf.graph();\n    const accessFetcher = new rdf.Fetcher(accessStore);\n    const accessUpdater = new rdf.UpdateManager(accessStore);\n\n    accessFetcher\n      .load(aclFile)\n      .then(response => {\n        const delACL = [];\n        const insACL = [\n          rdf.st(\n            rdf.sym(viewerNode),\n            ACL(\"agent\"),\n            rdf.sym(sender),\n            rdf.sym(viewerNode).doc()\n          )\n        ];\n\n        accessUpdater.update(delACL, insACL, (uri, ok, message) => {\n          if (!ok) console.log(message);\n          else console.log(\"Added .acl triples\");\n        });\n      })\n      .catch(err => {\n        const newACLTriples = [\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"agent\"),\n            rdf.sym(this.state.webId),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"accessTo\"),\n            rdf.sym(file),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"defaultForNew\"),\n            rdf.sym(file),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"mode\"),\n            ACL(\"Control\"),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"mode\"),\n            ACL(\"Read\"),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(ownerNode),\n            ACL(\"mode\"),\n            ACL(\"Write\"),\n            rdf.sym(ownerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(viewerNode),\n            ACL(\"agent\"),\n            rdf.sym(sender),\n            rdf.sym(viewerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(viewerNode),\n            ACL(\"accessTo\"),\n            rdf.sym(file),\n            rdf.sym(viewerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(viewerNode),\n            ACL(\"defaultForNew\"),\n            rdf.sym(file),\n            rdf.sym(viewerNode).doc()\n          ),\n          rdf.st(\n            rdf.sym(viewerNode),\n            ACL(\"mode\"),\n            ACL(\"Read\"),\n            rdf.sym(viewerNode).doc()\n          )\n        ];\n\n        accessUpdater.put(\n          rdf.sym(aclFile),\n          newACLTriples,\n          \"text/turtle\",\n          (uri, ok, message) => {\n            if (!ok) console.log(message);\n            else console.log(\"Added .acl triples\");\n          }\n        );\n      });\n\n    const delNotif = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n    const insNotif = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"Accepted\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n    accessUpdater.update(delNotif, insNotif, (uri, ok, message) => {\n      if (!ok) console.log(message);\n      else console.log(\"Added Accepted triple\"); window.location = \"https://a-solid-web.github.io/profile-viewer-react/\";\n    });\n  }\n\n  denyRequest(e) {\n    const notification = e.target.getAttribute(\"notification\");\n\n    const accessStore = rdf.graph();\n    const accessFetcher = new rdf.Fetcher(accessStore);\n    const accessUpdater = new rdf.UpdateManager(accessStore);\n\n    const del = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n    const ins = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"Denied\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n\n    accessUpdater.update(del, ins, (uri, ok, message) => {\n      if (!ok) alert(message);\n      else window.location = \"https://a-solid-web.github.io/profile-viewer-react/\";\n    });\n  }\n\n  revokeRequest(e) {\n    const notification = e.target.getAttribute(\"notification\");\n    const sender = e.target.getAttribute(\"sender\");\n    const aclFile = e.target.id + \".acl\";\n    const viewerNode = aclFile + \"#viewer\";\n\n    const accessStore = rdf.graph();\n    const accessFetcher = new rdf.Fetcher(accessStore);\n    const accessUpdater = new rdf.UpdateManager(accessStore);\n\n    const del = [\n      rdf.st(\n        rdf.sym(viewerNode),\n        ACL(\"agent\"),\n        rdf.sym(sender),\n        rdf.sym(viewerNode).doc()\n      )\n    ];\n    const ins = [];\n\n    accessUpdater.update(del, ins, (uri, ok, message) => {\n      if (!ok) console.log(message);\n      else console.log(\"Revoked access in .acl file\");\n    });\n\n    const delStatus = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"Accepted\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n\n    const insStatus = [\n      rdf.st(\n        rdf.sym(notification),\n        PREQ(\"hasStatus\"),\n        rdf.lit(\"\"),\n        rdf.sym(notification).doc()\n      )\n    ];\n\n    accessUpdater.update(delStatus, insStatus, (uri, ok, message) => {\n      if (!ok) alert(message);\n      else window.location = \"https://a-solid-web.github.io/profile-viewer-react/\";\n    });\n  }\n\n  addNotification(name, sender, picture, requestType) {\n    const requests = this.state.requests;\n    requests.push();\n    return;\n  }\n\n  addRequest(newRequest) {\n    const requests = this.state.requests.slice();\n    requests.push(newRequest);\n    this.setState({ requests: requests });\n  }\n\n  removeRequest(input) {\n    if (input === parseInt(input, 10)) {\n      const requests = this.state.requests.slice();\n      requests.splice(input, 1);\n      this.setState({ requests: requests });\n    } else {\n      const requests = this.state.requests.slice();\n      const filteredRequests = requests.filter((value, index, arr) => {\n        return value !== input;\n      });\n      this.setState({ requests: filteredRequests });\n    }\n  }\n\n  toggleModal(e) {\n    if (!this.state.showModal) {\n      this.setState({\n        showModal: !this.state.showModal,\n        currentRequest: e.target.getAttribute(\"index\")\n      });\n    }\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  }\n\n  getRequests() {\n    if (this.state.requests.length === 0) {\n      return (\n        <div className=\"requestcard-request\">\n          Looks like you don't have any requests at the moment\n        </div>\n      );\n    } else {\n      const requests = this.state.requests;\n      return requests.map((item, i) => {\n        return item[11] !== \"Denied\" ? (\n          <RequestCard\n            key={i}\n            index={i}\n            request={item}\n            onToggle={this.toggleModal.bind(this)}\n            onAccept={this.acceptRequest.bind(this)}\n            onDeny={this.denyRequest.bind(this)}\n            onRevoke={this.revokeRequest.bind(this)}\n          />\n        ) : (\n          \"\"\n        );\n      });\n    }\n  }\n\n  componentDidMount() {\n    auth.trackSession(session => {\n      if (!session) {\n        console.log(\"You are not logged in...\");\n      } else {\n        this.setState({\n          webId: session.webId\n        });\n      }\n\n      this.fetchNotificationAddresses(this.state.webId);\n    });\n  }\n\n  render() {\n    const requests = this.getRequests();\n    return (\n      <div\n        className=\"grid-container\"\n        addrequest={this.addRequest}\n        removerequest={this.removeRequest}\n      >\n        <div id=\"toggle\">\n          <div>Requests</div>\n          <div>Activity</div>\n        </div>\n        <div className=\"requestcards\">{requests}</div>\n        {this.state.requests[this.state.currentRequest] ? (\n          <DetailModal\n            show={this.state.showModal}\n            onHide={this.toggleModal.bind(this)}\n            request={this.state.requests[this.state.currentRequest]}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default OverviewPage;\n","import React from \"react\";\nimport { Button } from \"yoda-design-system\";\n\nconst UploadPicture = props => {\n  return (\n    <Button>\n      Upload\n      <input\n        id=\"upload\"\n        name=\"upload\"\n        type=\"file\"\n        onInput={props.onChange}\n        style={{ opacity: 0 }}\n      />\n    </Button>\n  );\n};\n\nexport default UploadPicture;\n","import React from \"react\";\nimport rdf from \"rdflib\";\nimport auth from \"solid-auth-client\";\nimport UploadPicture from \"../../functional_components/UploadPicture/UploadPicture\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\n\nconst LDP = rdf.Namespace(\"http://www.w3.org/ns/ldp#\");\n\nclass HealthPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined,\n      picture: undefined\n    };\n  }\n\n  uploadPic(e) {\n    var filePath = e.target.files[0];\n    var store = rdf.graph();\n    var fetcher = new rdf.Fetcher(store);\n\n    let webId = this.state.webId;\n\n    var reader = new FileReader();\n    reader.onload = function() {\n      var data = this.result;\n      var filename = encodeURIComponent(filePath.name);\n      var contentType = \"image\";\n      let pictureURl = webId.replace(\n        \"/profile/card#me\",\n        \"/health/\" + filename\n      );\n      fetcher.webOperation(\"PUT\", pictureURl, {\n        data: data,\n        contentType: contentType\n      });\n    };\n    reader.readAsArrayBuffer(filePath);\n    this.fetchPictures();\n  }\n\n  fetchPictures() {\n    const store = rdf.graph();\n    const fetcher = new rdf.Fetcher(store);\n\n    const healthDataAddress = this.state.webId.replace(\n      \"profile/card#me\",\n      \"health/\"\n    );\n\n    fetcher.load(healthDataAddress).then(response => {\n      const picture = store.any(rdf.sym(healthDataAddress), LDP(\"contains\"));\n      this.setState({\n        picture: picture ? picture.value : \"\"\n      });\n    });\n  }\n\n  componentDidMount() {\n    auth.trackSession(session => {\n      this.setState({\n        webId: session.webId\n      });\n      this.fetchPictures();\n    });\n  }\n\n  render() {\n    const pictureMarkup = this.state.picture ? (\n      <img src={this.state.picture} alt=\"Here is your medical data\"/>\n    ) : (\n      \"\"\n    );\n    return (\n      <Container>\n        <Col lg=\"1\" />\n        <Col lg=\"10\">\n          <div style={{ margin: \"5%\" }}>{pictureMarkup}</div>\n          <UploadPicture onChange={this.uploadPic.bind(this)} />\n        </Col>\n        <Col lg=\"1\" />\n      </Container>\n    );\n  }\n}\n\nexport default HealthPage;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport auth from \"solid-auth-client\";\nimport Profile from \"./components/stateful_components/Profile\";\nimport ContactsPage from \"./components/stateful_components/ContactsPage\";\nimport Navigation from \"./components/stateful_components/Navigation\";\nimport OverviewPage from \"./components/stateful_components/OverviewPage/OverviewPage\";\nimport HealthPage from \"./components/stateful_components/HealthPage/HealthPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webId: undefined\n    };\n  }\n\n  fetchUser() {\n    auth.trackSession(session => {\n      if (!session) {\n        console.log(\"You are not logged in\");\n      } else {\n        console.log(\"You are logged in... Fetching your data now\");\n        this.setState({\n          webId: session.webId\n        });\n      }\n    });\n  }\n\n  async login() {\n    const session = await auth.currentSession();\n    if (!session) {\n      await auth.login(\"https://solid.community\");\n    } else {\n      this.setState({\n        webId: session.webID\n      });\n    }\n  }\n\n  async logout() {\n    auth.logout().then(() => {\n      this.setState({\n        webId: undefined\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation login={this.login.bind(this)} webId={this.state.webId} />\n          <Switch>\n            <Route\n              path=\"/\"\n              render={() => <OverviewPage />}\n            />\n            <Route\n              path=\"/profile\"\n              render={() => <Profile logout={this.logout.bind(this)} />}\n              exact\n            />\n            <Route\n              path=\"/health\"\n              render={() => <HealthPage />}\n              exact\n            />\n            <Route path=\"/contacts\" render={() => <ContactsPage />} exact />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}